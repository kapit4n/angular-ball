/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './app.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/core/src/application_module';
import * as import4 from '@angular/platform-browser/src/browser';
import * as import5 from '@angular/forms/src/directives';
import * as import6 from '@angular/forms/src/form_providers';
import * as import7 from '@angular/http/src/http_module';
import * as import8 from '@angular/material/core/compatibility/default-mode';
import * as import9 from '@angular/material/core/ripple/ripple';
import * as import10 from '@angular/material/button/button';
import * as import11 from '@angular/material/card/card';
import * as import12 from '@angular/material/checkbox/checkbox';
import * as import13 from '@angular/material/core/line/line';
import * as import14 from '@angular/material/grid-list/grid-list';
import * as import15 from '@angular/material/input/input';
import * as import16 from '@angular/material/list/list';
import * as import17 from '@angular/material/progress-bar/progress-bar';
import * as import18 from '@angular/material/progress-circle/progress-circle';
import * as import19 from '@angular/material/core/portal/portal-directives';
import * as import20 from '@angular/material/core/overlay/overlay-directives';
import * as import21 from '@angular/material/select/index';
import * as import22 from '@angular/material/core/platform/platform';
import * as import23 from '@angular/material/core/a11y/index';
import * as import24 from '@angular/material/sidenav/sidenav';
import * as import25 from '@angular/material/tabs/tab-group';
import * as import26 from '@angular/material/toolbar/toolbar';
import * as import27 from '@angular/material/core/projection/projection';
import * as import28 from '@angular/material/core/rtl/dir';
import * as import29 from '@angular/material/button-toggle/button-toggle';
import * as import30 from '@angular/material/dialog/dialog';
import * as import31 from '@angular/material/icon/icon';
import * as import32 from '@angular/material/menu/menu';
import * as import33 from '@angular/material/radio/radio';
import * as import34 from '@angular/material/slider/slider';
import * as import35 from '@angular/material/slide-toggle/slide-toggle';
import * as import36 from '@angular/material/snack-bar/snack-bar';
import * as import37 from '@angular/material/tooltip/tooltip';
import * as import38 from '@angular/material/module';
import * as import39 from '@angular/common/src/localization';
import * as import40 from '@angular/core/src/application_init';
import * as import41 from '@angular/core/src/testability/testability';
import * as import42 from '@angular/core/src/application_ref';
import * as import43 from '@angular/core/src/linker/compiler';
import * as import44 from '@angular/material/core/gestures/MdGestureConfig';
import * as import45 from '@angular/platform-browser/src/dom/events/event_manager';
import * as import46 from '@angular/platform-browser/src/dom/shared_styles_host';
import * as import47 from '@angular/platform-browser/src/dom/dom_renderer';
import * as import48 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import49 from '@angular/core/src/linker/view_utils';
import * as import50 from '@angular/platform-browser/src/browser/title';
import * as import51 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import52 from '@angular/http/src/backends/browser_xhr';
import * as import53 from '@angular/http/src/base_response_options';
import * as import54 from '@angular/http/src/backends/xhr_backend';
import * as import55 from '@angular/http/src/base_request_options';
import * as import56 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import57 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import58 from '@angular/material/core/overlay/overlay-container';
import * as import59 from '@angular/material/core/overlay/overlay';
import * as import60 from '@angular/material/core/a11y/live-announcer';
import * as import61 from '@angular/material/core/a11y/interactivity-checker';
import * as import62 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import63 from '@angular/material/icon/icon-registry';
import * as import64 from '@angular/core/src/di/injector';
import * as import65 from '../node_modules/@angular/material/dialog/dialog-container.ngfactory';
import * as import66 from '../node_modules/@angular/material/snack-bar/snack-bar-container.ngfactory';
import * as import67 from '../node_modules/@angular/material/snack-bar/simple-snack-bar.ngfactory';
import * as import68 from '../node_modules/@angular/material/tooltip/tooltip.ngfactory';
import * as import69 from './app.component.ngfactory';
import * as import70 from '@angular/core/src/application_tokens';
import * as import71 from '@angular/platform-browser/src/dom/events/dom_events';
import * as import72 from '@angular/platform-browser/src/dom/events/key_events';
import * as import73 from '@angular/platform-browser/src/dom/events/hammer_gestures';
import * as import74 from '@angular/core/src/zone/ng_zone';
import * as import75 from '@angular/platform-browser/src/dom/debug/ng_probe';
import * as import76 from '@angular/core/src/console';
import * as import77 from '@angular/core/src/i18n/tokens';
import * as import78 from '@angular/core/src/error_handler';
import * as import79 from '@angular/platform-browser/src/dom/dom_tokens';
import * as import80 from '@angular/platform-browser/src/dom/animation_driver';
import * as import81 from '@angular/core/src/render/api';
import * as import82 from '@angular/core/src/security';
import * as import83 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import84 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import85 from '@angular/http/src/interfaces';
import * as import86 from '@angular/http/src/http';
class AppModuleInjector extends import0.NgModuleInjector<import1.AppModule> {
  _CommonModule_0:import2.CommonModule;
  _ApplicationModule_1:import3.ApplicationModule;
  _BrowserModule_2:import4.BrowserModule;
  _InternalFormsSharedModule_3:import5.InternalFormsSharedModule;
  _FormsModule_4:import6.FormsModule;
  _HttpModule_5:import7.HttpModule;
  _DefaultStyleCompatibilityModeModule_6:import8.DefaultStyleCompatibilityModeModule;
  _MdRippleModule_7:import9.MdRippleModule;
  _MdButtonModule_8:import10.MdButtonModule;
  _MdCardModule_9:import11.MdCardModule;
  _MdCheckboxModule_10:import12.MdCheckboxModule;
  _MdLineModule_11:import13.MdLineModule;
  _MdGridListModule_12:import14.MdGridListModule;
  _MdInputModule_13:import15.MdInputModule;
  _MdListModule_14:import16.MdListModule;
  _MdProgressBarModule_15:import17.MdProgressBarModule;
  _MdProgressCircleModule_16:import18.MdProgressCircleModule;
  _PortalModule_17:import19.PortalModule;
  _OverlayModule_18:import20.OverlayModule;
  _MdSelectModule_19:import21.MdSelectModule;
  _PlatformModule_20:import22.PlatformModule;
  _A11yModule_21:import23.A11yModule;
  _MdSidenavModule_22:import24.MdSidenavModule;
  _MdTabsModule_23:import25.MdTabsModule;
  _MdToolbarModule_24:import26.MdToolbarModule;
  _ProjectionModule_25:import27.ProjectionModule;
  _RtlModule_26:import28.RtlModule;
  _MdButtonToggleModule_27:import29.MdButtonToggleModule;
  _MdDialogModule_28:import30.MdDialogModule;
  _MdIconModule_29:import31.MdIconModule;
  _MdMenuModule_30:import32.MdMenuModule;
  _MdRadioModule_31:import33.MdRadioModule;
  _MdSliderModule_32:import34.MdSliderModule;
  _MdSlideToggleModule_33:import35.MdSlideToggleModule;
  _MdSnackBarModule_34:import36.MdSnackBarModule;
  _MdTooltipModule_35:import37.MdTooltipModule;
  _MaterialRootModule_36:import38.MaterialRootModule;
  _AppModule_37:import1.AppModule;
  __LOCALE_ID_38:any;
  __NgLocalization_39:import39.NgLocaleLocalization;
  _ErrorHandler_40:any;
  _ApplicationInitStatus_41:import40.ApplicationInitStatus;
  _Testability_42:import41.Testability;
  _ApplicationRef__43:import42.ApplicationRef_;
  __ApplicationRef_44:any;
  __Compiler_45:import43.Compiler;
  __APP_ID_46:any;
  __DOCUMENT_47:any;
  __HAMMER_GESTURE_CONFIG_48:import44.MdGestureConfig;
  __EVENT_MANAGER_PLUGINS_49:any[];
  __EventManager_50:import45.EventManager;
  __DomSharedStylesHost_51:import46.DomSharedStylesHost;
  __AnimationDriver_52:any;
  __DomRootRenderer_53:import47.DomRootRenderer_;
  __RootRenderer_54:any;
  __DomSanitizer_55:import48.DomSanitizerImpl;
  __Sanitizer_56:any;
  __ViewUtils_57:import49.ViewUtils;
  __IterableDiffers_58:any;
  __KeyValueDiffers_59:any;
  __SharedStylesHost_60:any;
  __Title_61:import50.Title;
  __RadioControlRegistry_62:import51.RadioControlRegistry;
  __BrowserXhr_63:import52.BrowserXhr;
  __ResponseOptions_64:import53.BaseResponseOptions;
  __XSRFStrategy_65:any;
  __XHRBackend_66:import54.XHRBackend;
  __RequestOptions_67:import55.BaseRequestOptions;
  __Http_68:any;
  __MATERIAL_COMPATIBILITY_MODE_69:any;
  __ViewportRuler_70:import56.ViewportRuler;
  __OverlayPositionBuilder_71:import57.OverlayPositionBuilder;
  __OverlayContainer_72:import58.OverlayContainer;
  __Overlay_73:import59.Overlay;
  __MdLiveAnnouncer_74:import60.MdLiveAnnouncer;
  __MdPlatform_75:import22.MdPlatform;
  __InteractivityChecker_76:import61.InteractivityChecker;
  __DomProjection_77:import27.DomProjection;
  __MdUniqueSelectionDispatcher_78:import62.MdUniqueSelectionDispatcher;
  __MdDialog_79:import30.MdDialog;
  __MdIconRegistry_80:import63.MdIconRegistry;
  __MdSnackBar_81:import36.MdSnackBar;
  constructor(parent:import64.Injector) {
    super(parent,[
      import65.MdDialogContainerNgFactory,
      import66.MdSnackBarContainerNgFactory,
      import67.SimpleSnackBarNgFactory,
      import68.TooltipComponentNgFactory,
      import69.AppComponentNgFactory
    ]
    ,[import69.AppComponentNgFactory]);
  }
  get _LOCALE_ID_38():any {
    if ((this.__LOCALE_ID_38 == null)) { (this.__LOCALE_ID_38 = 'en-US'); }
    return this.__LOCALE_ID_38;
  }
  get _NgLocalization_39():import39.NgLocaleLocalization {
    if ((this.__NgLocalization_39 == null)) { (this.__NgLocalization_39 = new import39.NgLocaleLocalization(this._LOCALE_ID_38)); }
    return this.__NgLocalization_39;
  }
  get _ApplicationRef_44():any {
    if ((this.__ApplicationRef_44 == null)) { (this.__ApplicationRef_44 = this._ApplicationRef__43); }
    return this.__ApplicationRef_44;
  }
  get _Compiler_45():import43.Compiler {
    if ((this.__Compiler_45 == null)) { (this.__Compiler_45 = new import43.Compiler()); }
    return this.__Compiler_45;
  }
  get _APP_ID_46():any {
    if ((this.__APP_ID_46 == null)) { (this.__APP_ID_46 = import70._appIdRandomProviderFactory()); }
    return this.__APP_ID_46;
  }
  get _DOCUMENT_47():any {
    if ((this.__DOCUMENT_47 == null)) { (this.__DOCUMENT_47 = import4._document()); }
    return this.__DOCUMENT_47;
  }
  get _HAMMER_GESTURE_CONFIG_48():import44.MdGestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_48 == null)) { (this.__HAMMER_GESTURE_CONFIG_48 = new import44.MdGestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_48;
  }
  get _EVENT_MANAGER_PLUGINS_49():any[] {
    if ((this.__EVENT_MANAGER_PLUGINS_49 == null)) { (this.__EVENT_MANAGER_PLUGINS_49 = [
      new import71.DomEventsPlugin(),
      new import72.KeyEventsPlugin(),
      new import73.HammerGesturesPlugin(this._HAMMER_GESTURE_CONFIG_48)
    ]
    ); }
    return this.__EVENT_MANAGER_PLUGINS_49;
  }
  get _EventManager_50():import45.EventManager {
    if ((this.__EventManager_50 == null)) { (this.__EventManager_50 = new import45.EventManager(this._EVENT_MANAGER_PLUGINS_49,this.parent.get(import74.NgZone))); }
    return this.__EventManager_50;
  }
  get _DomSharedStylesHost_51():import46.DomSharedStylesHost {
    if ((this.__DomSharedStylesHost_51 == null)) { (this.__DomSharedStylesHost_51 = new import46.DomSharedStylesHost(this._DOCUMENT_47)); }
    return this.__DomSharedStylesHost_51;
  }
  get _AnimationDriver_52():any {
    if ((this.__AnimationDriver_52 == null)) { (this.__AnimationDriver_52 = import4._resolveDefaultAnimationDriver()); }
    return this.__AnimationDriver_52;
  }
  get _DomRootRenderer_53():import47.DomRootRenderer_ {
    if ((this.__DomRootRenderer_53 == null)) { (this.__DomRootRenderer_53 = new import47.DomRootRenderer_(this._DOCUMENT_47,this._EventManager_50,this._DomSharedStylesHost_51,this._AnimationDriver_52,this._APP_ID_46)); }
    return this.__DomRootRenderer_53;
  }
  get _RootRenderer_54():any {
    if ((this.__RootRenderer_54 == null)) { (this.__RootRenderer_54 = import75._createConditionalRootRenderer(this._DomRootRenderer_53,this.parent.get(import75.NgProbeToken,(null as any)))); }
    return this.__RootRenderer_54;
  }
  get _DomSanitizer_55():import48.DomSanitizerImpl {
    if ((this.__DomSanitizer_55 == null)) { (this.__DomSanitizer_55 = new import48.DomSanitizerImpl()); }
    return this.__DomSanitizer_55;
  }
  get _Sanitizer_56():any {
    if ((this.__Sanitizer_56 == null)) { (this.__Sanitizer_56 = this._DomSanitizer_55); }
    return this.__Sanitizer_56;
  }
  get _ViewUtils_57():import49.ViewUtils {
    if ((this.__ViewUtils_57 == null)) { (this.__ViewUtils_57 = new import49.ViewUtils(this._RootRenderer_54,this._Sanitizer_56)); }
    return this.__ViewUtils_57;
  }
  get _IterableDiffers_58():any {
    if ((this.__IterableDiffers_58 == null)) { (this.__IterableDiffers_58 = import3._iterableDiffersFactory()); }
    return this.__IterableDiffers_58;
  }
  get _KeyValueDiffers_59():any {
    if ((this.__KeyValueDiffers_59 == null)) { (this.__KeyValueDiffers_59 = import3._keyValueDiffersFactory()); }
    return this.__KeyValueDiffers_59;
  }
  get _SharedStylesHost_60():any {
    if ((this.__SharedStylesHost_60 == null)) { (this.__SharedStylesHost_60 = this._DomSharedStylesHost_51); }
    return this.__SharedStylesHost_60;
  }
  get _Title_61():import50.Title {
    if ((this.__Title_61 == null)) { (this.__Title_61 = new import50.Title()); }
    return this.__Title_61;
  }
  get _RadioControlRegistry_62():import51.RadioControlRegistry {
    if ((this.__RadioControlRegistry_62 == null)) { (this.__RadioControlRegistry_62 = new import51.RadioControlRegistry()); }
    return this.__RadioControlRegistry_62;
  }
  get _BrowserXhr_63():import52.BrowserXhr {
    if ((this.__BrowserXhr_63 == null)) { (this.__BrowserXhr_63 = new import52.BrowserXhr()); }
    return this.__BrowserXhr_63;
  }
  get _ResponseOptions_64():import53.BaseResponseOptions {
    if ((this.__ResponseOptions_64 == null)) { (this.__ResponseOptions_64 = new import53.BaseResponseOptions()); }
    return this.__ResponseOptions_64;
  }
  get _XSRFStrategy_65():any {
    if ((this.__XSRFStrategy_65 == null)) { (this.__XSRFStrategy_65 = import7._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_65;
  }
  get _XHRBackend_66():import54.XHRBackend {
    if ((this.__XHRBackend_66 == null)) { (this.__XHRBackend_66 = new import54.XHRBackend(this._BrowserXhr_63,this._ResponseOptions_64,this._XSRFStrategy_65)); }
    return this.__XHRBackend_66;
  }
  get _RequestOptions_67():import55.BaseRequestOptions {
    if ((this.__RequestOptions_67 == null)) { (this.__RequestOptions_67 = new import55.BaseRequestOptions()); }
    return this.__RequestOptions_67;
  }
  get _Http_68():any {
    if ((this.__Http_68 == null)) { (this.__Http_68 = import7.httpFactory(this._XHRBackend_66,this._RequestOptions_67)); }
    return this.__Http_68;
  }
  get _MATERIAL_COMPATIBILITY_MODE_69():any {
    if ((this.__MATERIAL_COMPATIBILITY_MODE_69 == null)) { (this.__MATERIAL_COMPATIBILITY_MODE_69 = false); }
    return this.__MATERIAL_COMPATIBILITY_MODE_69;
  }
  get _ViewportRuler_70():import56.ViewportRuler {
    if ((this.__ViewportRuler_70 == null)) { (this.__ViewportRuler_70 = new import56.ViewportRuler()); }
    return this.__ViewportRuler_70;
  }
  get _OverlayPositionBuilder_71():import57.OverlayPositionBuilder {
    if ((this.__OverlayPositionBuilder_71 == null)) { (this.__OverlayPositionBuilder_71 = new import57.OverlayPositionBuilder(this._ViewportRuler_70)); }
    return this.__OverlayPositionBuilder_71;
  }
  get _OverlayContainer_72():import58.OverlayContainer {
    if ((this.__OverlayContainer_72 == null)) { (this.__OverlayContainer_72 = new import58.OverlayContainer()); }
    return this.__OverlayContainer_72;
  }
  get _Overlay_73():import59.Overlay {
    if ((this.__Overlay_73 == null)) { (this.__Overlay_73 = new import59.Overlay(this._OverlayContainer_72,this,this._OverlayPositionBuilder_71,this._ApplicationRef_44,this,this.parent.get(import74.NgZone))); }
    return this.__Overlay_73;
  }
  get _MdLiveAnnouncer_74():import60.MdLiveAnnouncer {
    if ((this.__MdLiveAnnouncer_74 == null)) { (this.__MdLiveAnnouncer_74 = new import60.MdLiveAnnouncer(this.parent.get(import60.LIVE_ANNOUNCER_ELEMENT_TOKEN,(null as any)))); }
    return this.__MdLiveAnnouncer_74;
  }
  get _MdPlatform_75():import22.MdPlatform {
    if ((this.__MdPlatform_75 == null)) { (this.__MdPlatform_75 = new import22.MdPlatform()); }
    return this.__MdPlatform_75;
  }
  get _InteractivityChecker_76():import61.InteractivityChecker {
    if ((this.__InteractivityChecker_76 == null)) { (this.__InteractivityChecker_76 = new import61.InteractivityChecker(this._MdPlatform_75)); }
    return this.__InteractivityChecker_76;
  }
  get _DomProjection_77():import27.DomProjection {
    if ((this.__DomProjection_77 == null)) { (this.__DomProjection_77 = new import27.DomProjection()); }
    return this.__DomProjection_77;
  }
  get _MdUniqueSelectionDispatcher_78():import62.MdUniqueSelectionDispatcher {
    if ((this.__MdUniqueSelectionDispatcher_78 == null)) { (this.__MdUniqueSelectionDispatcher_78 = new import62.MdUniqueSelectionDispatcher()); }
    return this.__MdUniqueSelectionDispatcher_78;
  }
  get _MdDialog_79():import30.MdDialog {
    if ((this.__MdDialog_79 == null)) { (this.__MdDialog_79 = new import30.MdDialog(this._Overlay_73,this)); }
    return this.__MdDialog_79;
  }
  get _MdIconRegistry_80():import63.MdIconRegistry {
    if ((this.__MdIconRegistry_80 == null)) { (this.__MdIconRegistry_80 = new import63.MdIconRegistry(this._Http_68)); }
    return this.__MdIconRegistry_80;
  }
  get _MdSnackBar_81():import36.MdSnackBar {
    if ((this.__MdSnackBar_81 == null)) { (this.__MdSnackBar_81 = new import36.MdSnackBar(this._Overlay_73,this._MdLiveAnnouncer_74)); }
    return this.__MdSnackBar_81;
  }
  createInternal():import1.AppModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._ApplicationModule_1 = new import3.ApplicationModule();
    this._BrowserModule_2 = new import4.BrowserModule(this.parent.get(import4.BrowserModule,(null as any)));
    this._InternalFormsSharedModule_3 = new import5.InternalFormsSharedModule();
    this._FormsModule_4 = new import6.FormsModule();
    this._HttpModule_5 = new import7.HttpModule();
    this._DefaultStyleCompatibilityModeModule_6 = new import8.DefaultStyleCompatibilityModeModule();
    this._MdRippleModule_7 = new import9.MdRippleModule();
    this._MdButtonModule_8 = new import10.MdButtonModule();
    this._MdCardModule_9 = new import11.MdCardModule();
    this._MdCheckboxModule_10 = new import12.MdCheckboxModule();
    this._MdLineModule_11 = new import13.MdLineModule();
    this._MdGridListModule_12 = new import14.MdGridListModule();
    this._MdInputModule_13 = new import15.MdInputModule();
    this._MdListModule_14 = new import16.MdListModule();
    this._MdProgressBarModule_15 = new import17.MdProgressBarModule();
    this._MdProgressCircleModule_16 = new import18.MdProgressCircleModule();
    this._PortalModule_17 = new import19.PortalModule();
    this._OverlayModule_18 = new import20.OverlayModule();
    this._MdSelectModule_19 = new import21.MdSelectModule();
    this._PlatformModule_20 = new import22.PlatformModule();
    this._A11yModule_21 = new import23.A11yModule();
    this._MdSidenavModule_22 = new import24.MdSidenavModule();
    this._MdTabsModule_23 = new import25.MdTabsModule();
    this._MdToolbarModule_24 = new import26.MdToolbarModule();
    this._ProjectionModule_25 = new import27.ProjectionModule();
    this._RtlModule_26 = new import28.RtlModule();
    this._MdButtonToggleModule_27 = new import29.MdButtonToggleModule();
    this._MdDialogModule_28 = new import30.MdDialogModule();
    this._MdIconModule_29 = new import31.MdIconModule();
    this._MdMenuModule_30 = new import32.MdMenuModule();
    this._MdRadioModule_31 = new import33.MdRadioModule();
    this._MdSliderModule_32 = new import34.MdSliderModule();
    this._MdSlideToggleModule_33 = new import35.MdSlideToggleModule();
    this._MdSnackBarModule_34 = new import36.MdSnackBarModule();
    this._MdTooltipModule_35 = new import37.MdTooltipModule();
    this._MaterialRootModule_36 = new import38.MaterialRootModule();
    this._AppModule_37 = new import1.AppModule();
    this._ErrorHandler_40 = import4.errorHandler();
    this._ApplicationInitStatus_41 = new import40.ApplicationInitStatus(this.parent.get(import40.APP_INITIALIZER,(null as any)));
    this._Testability_42 = new import41.Testability(this.parent.get(import74.NgZone));
    this._ApplicationRef__43 = new import42.ApplicationRef_(this.parent.get(import74.NgZone),this.parent.get(import76.Console),this,this._ErrorHandler_40,this,this._ApplicationInitStatus_41,this.parent.get(import41.TestabilityRegistry,(null as any)),this._Testability_42);
    return this._AppModule_37;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.ApplicationModule)) { return this._ApplicationModule_1; }
    if ((token === import4.BrowserModule)) { return this._BrowserModule_2; }
    if ((token === import5.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_3; }
    if ((token === import6.FormsModule)) { return this._FormsModule_4; }
    if ((token === import7.HttpModule)) { return this._HttpModule_5; }
    if ((token === import8.DefaultStyleCompatibilityModeModule)) { return this._DefaultStyleCompatibilityModeModule_6; }
    if ((token === import9.MdRippleModule)) { return this._MdRippleModule_7; }
    if ((token === import10.MdButtonModule)) { return this._MdButtonModule_8; }
    if ((token === import11.MdCardModule)) { return this._MdCardModule_9; }
    if ((token === import12.MdCheckboxModule)) { return this._MdCheckboxModule_10; }
    if ((token === import13.MdLineModule)) { return this._MdLineModule_11; }
    if ((token === import14.MdGridListModule)) { return this._MdGridListModule_12; }
    if ((token === import15.MdInputModule)) { return this._MdInputModule_13; }
    if ((token === import16.MdListModule)) { return this._MdListModule_14; }
    if ((token === import17.MdProgressBarModule)) { return this._MdProgressBarModule_15; }
    if ((token === import18.MdProgressCircleModule)) { return this._MdProgressCircleModule_16; }
    if ((token === import19.PortalModule)) { return this._PortalModule_17; }
    if ((token === import20.OverlayModule)) { return this._OverlayModule_18; }
    if ((token === import21.MdSelectModule)) { return this._MdSelectModule_19; }
    if ((token === import22.PlatformModule)) { return this._PlatformModule_20; }
    if ((token === import23.A11yModule)) { return this._A11yModule_21; }
    if ((token === import24.MdSidenavModule)) { return this._MdSidenavModule_22; }
    if ((token === import25.MdTabsModule)) { return this._MdTabsModule_23; }
    if ((token === import26.MdToolbarModule)) { return this._MdToolbarModule_24; }
    if ((token === import27.ProjectionModule)) { return this._ProjectionModule_25; }
    if ((token === import28.RtlModule)) { return this._RtlModule_26; }
    if ((token === import29.MdButtonToggleModule)) { return this._MdButtonToggleModule_27; }
    if ((token === import30.MdDialogModule)) { return this._MdDialogModule_28; }
    if ((token === import31.MdIconModule)) { return this._MdIconModule_29; }
    if ((token === import32.MdMenuModule)) { return this._MdMenuModule_30; }
    if ((token === import33.MdRadioModule)) { return this._MdRadioModule_31; }
    if ((token === import34.MdSliderModule)) { return this._MdSliderModule_32; }
    if ((token === import35.MdSlideToggleModule)) { return this._MdSlideToggleModule_33; }
    if ((token === import36.MdSnackBarModule)) { return this._MdSnackBarModule_34; }
    if ((token === import37.MdTooltipModule)) { return this._MdTooltipModule_35; }
    if ((token === import38.MaterialRootModule)) { return this._MaterialRootModule_36; }
    if ((token === import1.AppModule)) { return this._AppModule_37; }
    if ((token === import77.LOCALE_ID)) { return this._LOCALE_ID_38; }
    if ((token === import39.NgLocalization)) { return this._NgLocalization_39; }
    if ((token === import78.ErrorHandler)) { return this._ErrorHandler_40; }
    if ((token === import40.ApplicationInitStatus)) { return this._ApplicationInitStatus_41; }
    if ((token === import41.Testability)) { return this._Testability_42; }
    if ((token === import42.ApplicationRef_)) { return this._ApplicationRef__43; }
    if ((token === import42.ApplicationRef)) { return this._ApplicationRef_44; }
    if ((token === import43.Compiler)) { return this._Compiler_45; }
    if ((token === import70.APP_ID)) { return this._APP_ID_46; }
    if ((token === import79.DOCUMENT)) { return this._DOCUMENT_47; }
    if ((token === import73.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_48; }
    if ((token === import45.EVENT_MANAGER_PLUGINS)) { return this._EVENT_MANAGER_PLUGINS_49; }
    if ((token === import45.EventManager)) { return this._EventManager_50; }
    if ((token === import46.DomSharedStylesHost)) { return this._DomSharedStylesHost_51; }
    if ((token === import80.AnimationDriver)) { return this._AnimationDriver_52; }
    if ((token === import47.DomRootRenderer)) { return this._DomRootRenderer_53; }
    if ((token === import81.RootRenderer)) { return this._RootRenderer_54; }
    if ((token === import48.DomSanitizer)) { return this._DomSanitizer_55; }
    if ((token === import82.Sanitizer)) { return this._Sanitizer_56; }
    if ((token === import49.ViewUtils)) { return this._ViewUtils_57; }
    if ((token === import83.IterableDiffers)) { return this._IterableDiffers_58; }
    if ((token === import84.KeyValueDiffers)) { return this._KeyValueDiffers_59; }
    if ((token === import46.SharedStylesHost)) { return this._SharedStylesHost_60; }
    if ((token === import50.Title)) { return this._Title_61; }
    if ((token === import51.RadioControlRegistry)) { return this._RadioControlRegistry_62; }
    if ((token === import52.BrowserXhr)) { return this._BrowserXhr_63; }
    if ((token === import53.ResponseOptions)) { return this._ResponseOptions_64; }
    if ((token === import85.XSRFStrategy)) { return this._XSRFStrategy_65; }
    if ((token === import54.XHRBackend)) { return this._XHRBackend_66; }
    if ((token === import55.RequestOptions)) { return this._RequestOptions_67; }
    if ((token === import86.Http)) { return this._Http_68; }
    if ((token === import8.MATERIAL_COMPATIBILITY_MODE)) { return this._MATERIAL_COMPATIBILITY_MODE_69; }
    if ((token === import56.ViewportRuler)) { return this._ViewportRuler_70; }
    if ((token === import57.OverlayPositionBuilder)) { return this._OverlayPositionBuilder_71; }
    if ((token === import58.OverlayContainer)) { return this._OverlayContainer_72; }
    if ((token === import59.Overlay)) { return this._Overlay_73; }
    if ((token === import60.MdLiveAnnouncer)) { return this._MdLiveAnnouncer_74; }
    if ((token === import22.MdPlatform)) { return this._MdPlatform_75; }
    if ((token === import61.InteractivityChecker)) { return this._InteractivityChecker_76; }
    if ((token === import27.DomProjection)) { return this._DomProjection_77; }
    if ((token === import62.MdUniqueSelectionDispatcher)) { return this._MdUniqueSelectionDispatcher_78; }
    if ((token === import30.MdDialog)) { return this._MdDialog_79; }
    if ((token === import63.MdIconRegistry)) { return this._MdIconRegistry_80; }
    if ((token === import36.MdSnackBar)) { return this._MdSnackBar_81; }
    return notFoundResult;
  }
  destroyInternal():void {
    this._ApplicationRef__43.ngOnDestroy();
  }
}
export const AppModuleNgFactory:import0.NgModuleFactory<import1.AppModule> = new import0.NgModuleFactory(AppModuleInjector,import1.AppModule);